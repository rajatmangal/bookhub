== Readme

BookHub: The right book will always keep you company
GITHUB Link: https://github.com/njindal239/rails
Heroku Link: https://bookhubapp276.herokuapp.com/

Project Abstract:
Current Approach to the Problem:
Many of the universities do not have an exclusive website or some kind of platform for selling and purchasing used books for example, in SFU, it is difficult for students to keep track of the books that are available for sale. The posts of books are inconspicuous in the Facebook pages with other social comments. Also, students first need to ask the seller about the availability of the books. There is no provision for a student to keep track of all the books he/she has posted for selling and no one is managing these pages. Locating a certain book requires scrolling through books that are not related to student interest.

BookHub makes it easier: 
BookHub provides university students with an exclusive platform for trading used books. Students will have a proper platform where they can keep track of all the books they have posted. Students will have seperate page for the order history and the visibility of their posted books. Studnets will also have an option to put the book in the Wishist. They will be notified when the book in the wishlist become available. BookHub would reduce the time to find books by the exclusive services for old books. Students will be able to search the books based on the name or ISBN of the book.

Target Audience / Customers: 
BookHub is a web application portal which is restricted for serving the purpose of university students. Only students who have a student account with verified universities are eligible to create an account with BookHub. Based on the initial response to the web application and student demands, BookHub can be expanded to include university book stores information. BookHub is not for non-student accesses because non-student customers could pollute the academic student portal and there will be no one to manage those. BookHub is limited only to academic books. There is a consideration to provide remote access to verified old bookseller so that the sellers can post course books that are needed for several students.

Scope of the Project:
BookHub is designed to serve the needs of the students. The sign up is for unverified users to verify user's account. Once verified each user is able to manage his/her profile through the sign in. BookHub has a search column used by users to search for the required books. The user is able to search a book by specifying various details such as the name of the book, ISBN of the book. Students can also add some additional details for the book like pictures, the condition of the book etc. as it will help the buyer to get more details. In case a book is not available for sale on BookHub, the student can add the book in the Wish List. If the book becomes available in future, all the students who have added that particular book in their Wish List will be notified with an email. There is a consideration to allow remote access to verified old booksellers (only for course books). The sellers can post books on the portal which serve the requirements of the students.

Modified For Iteration 2:
Competitive Analysis:
BookHub is a competition for all the websites who sell used books online. For instance - Amazon, University used books websites or pages. It will be a firm competition to Amazon and Facebook sites and will be exclusive to university students. Students will have a cluster of books to buy from BookHub. BookHub has a functionality that allows students to set the time by which the book will be out to sell as this function of time setting will increase the availability scope as the books will be available as soon as possible. BookHub will benefit students because BookHub is a non-profit application. Also, it will have a donation column which allows people to donate books. The donation is available to students who have them in the wish list. As BookHub is exclusive to university students, the BookHub will be connected to university administration account. Students do not have to wait and set up a meeting point after the trading information is posted. They can give the book to administration. Website will provide a unique sold-out number to the buyer once the person pays for the book. Buyer student have to show their id and the sold-out number in the administration office and can colect the book. If the administration permits the request, BookHub will connect to the university administration account and the balance in student account are able to directly deposited to the BookHub account. The functionalities mentioned above will be a competitive edge on the other sites.

Modified For Iteration 3:
User Stories:
There are two types of users in BookHub: Admin and Normal User
1.   Admin: Admin has a specific email and password. It will have special rights which help to maintain BookHub. The admin account is able to keep track of all the users and books that are posted by them. He/She will have full access to the database. It also have the ability to delete users. Admin is able to edit and delete the books that are posted on BookHub. In Future, the admin will have rights to watch the transactions performed and receive the feedback directly from the users.
2.   Normal user: A normal user can sign up to make an account on the website and then will use that username and password to log in to the website. A user has the option to manage their profile and can modify the details provided. Also, a user is able to add and check books that are posted by other users. Users can modify and change the details of the books that are posted by them. But they do not have the authorization to modify or delete the books posted by other users. Only the admin has the right to modify details for every book if required. In future, the user will be able to add his/her profile picture and provide the availability date when the book will be available for sale.

Workflow Steps:

In this Iteration, there is a new feature for adding the books. After logging in, the user will see a dropdown menu on the top right of the screen. The user can click on the menu and there will be an option "Add a new book". The user can select the option and can add a new book. The user can see all the books that are available on the website using the "List Books" option. They have full access to modify the details of the books that they have added. The user is restricted to modify or delete the books that he/she has added. The modification feature is achieved by providing the "edit book" or "delete book" buttons corresponding to the books that have been added by that specific user. The user can make changes in his/her profile by clicking on the "Profile" option on the menu. 

Modified for Iteration 4:
Retrospective:
There are four members in the team and the agile process is used for the second iteration. The team divided the work into small parts and different roles were given to team members. The work is divided into 10 tasks:
-	HTML Pages and Styling
-	Bcrypt Encryption
-	Creating a database and linking it to users
-	Authentication
-	Visibility from UI
-	Search Bar
-	Profile Picture
-	Wishlist
-	Book's Image
-	Stripe API

Because some of these tasks were big, 2 members collaborated to complete the task. The smaller tasks were completed individually. Nipun Jindal handled the Books Database and linked it with the Users. He implemented the search bar for iteration 3. Also, he helped in Authentication. Agamdeep Singh did the Bcrypt Encryption and helped with the UI Authentication. Eric Zhuang helped with the Authentication and Styling. For iteration 3, Eric Zhaung and Agamdeep implemented the wishlist. Rajat Mangal managed the HTML pages, styling part, and UI visibility.for iteration 3, he added Profile picture and Book's image. He also made a display for books with all details and its image.

For Iteration 3, the group wanted to implement a payment API, and the Stripe API is used. All the team members put in their efforts for BookHub. 

For iteration 2, the planning was done well in time and as a result, the whole work was completed before the expected time. It took 5 days to complete the work for Iteration 2. The constant support of all the team members helped to complete the stuff planned for Iteration 2. This time, the collaboration was good as each team members learned from the mistakes from iteration 1. There were technical errors this time but the team was able to fix them. The group also tried to use GitHub more but the everyone is still learning. The group divided the tasks on GitHub but the commits were made from the group leader account. Each group member did a good job in this Iteration. There is still space for improvements in utilizing the actual benefits of GitHub. Though the group was able to assign issues to GitHub, since everyone was working together most of the time, the group committed only from one account. The committing style is the major thing that the group wants to improve from the next iteration onwards. Hence, everyone will start doing commits from all the accounts from the next iteration. Overall, the work was split up between team members, every person was involved in all phases of design and implementation. It was a complete team effort and the team jelled up well.

For iteration 3, 
-	Things that went well: All the issues assigned to team members were successfully completed. GitHub was used to distribute work and group members made full use of GitHub's functionality. 
-	Things that didn't go well: Although the group implemented Stripe API but the group was not able to make complete use of its functionality which the group will improve.
-	For future: The group is planning to add more security to BookHub and the group is planning to use more APIs. For instance, Facebook API. 
