== Readme

== Readme

BookHub: The right book will always keep you company
GITHUB Link: https://github.com/njindal239/rails
Heroku Link: https://bookhubapp276.herokuapp.com/
Repository User Mapping: 
"	Nipun Jindal: njindal239
"	Rajat Mangal: rajatmangal
"	Agamdeep Singh: agam2091995
"	Eric Zhuang: xfijk

Please use the following credentials for signing in to the account:

-     Admin Login: email: cmpt276@sfu.ca, password: "password".
-     Common User Login: njindal@sfu.ca, password: "password".
-     Make your own user account.

Project Abstract:
BookHub is a student portal for selling and buying old academic books pertaining to SFU courses. Users can sign up only if users have a valid account linked to SFU student portal.The portal will keep the track of all the books purchased and sold by the student. The student is able to view the status of all the books he/she has posted for selling.BookHub maintains a database for all users, available books, Wish Listed books, purchases and users associated with each sale and purchase. The database of BookHub is important reagards to security purposes. BookHub is intended to lessen the burden of keeping track of a wide variety of books.

Current Approach to the Problem:
Students at SFU do not have an exclusive access to the academic books that students want to trade. SFU students are difficult to keep track of the books which are posted for selling. The posts of books are unconspicuous in the Facebook pages with other social comments. Students need to contact the seller to know the book is available or not. There is no provision for a student to keep a track of all the books he/she has posted for selling. Locating a certain book requires scrolling through books that are not related to the student interest.

BookHub makes it easier: 
BookHub provides SFU students with an exclusive platform for trading used SFU books. Each student has a database to keep track of all the books that he/she posted for selling and/or has added to the Wishlist. Students will be notified when the sought books become available. BookHub would reduce the time to find books by the exclusive services for SFU old books. Students are able to search for the books based on the name of the book as well as the course name.

Target Audience / Customers: 
BookHub is a web application which is restricted for serving the purpose of SFU students. Only students who have a student account are  eligible to create an account with BookHub. Based on the initial response to the web application and student demands, BookHub can be expanded to include students from other universities. BookHub is not for non-student accesses because non-student customers could pollute the otherwise academic student portal. BookHub is limited only to academic books. There is a consideration to provide remote access to verified old book sellers so that the sellers can post SFU course books that is needed for several students.

Scope of the Project:
BookHub is incorporate features to serve the needs of SFU students. The sign up is for unverified users to verify users' account. Once verified each user is able to manage his/her profile through the sign in. BookHub has a search column used by users to search for the required books. The user is able to search a book by specifying various details such as the name of the book, ISBN of the book or the name of the course that requires that particular book. BookHub has a column where a user is able to post a book for sale along with all the relevant details such as pictures, the condition of the book, price etc. In case a book is not available in the BookHub, the student could add the book in the Wish List. If the book becomes available in future, all the students who have added that particular book in the Wish List are notified with an email. There is a consideration to allow remote access to verified old booksellers (only for SFU course books). The sellers can post books on the portal which serve the requirements of SFU students.

Modified For Iteration 2:
Competitive Analysis:
BookHub is a competition for all the websites who sell used books online. For instance - Amazon, SFU used books (Facebook Page). BookHub will be a firm competition to Amazon and Facebook sites. BookHub will be exclusive to SFU students. Sfu students will have a cluster of books to buy from BookHub. BookHuhasve a functionality that allow SFU students to set the time by which the book will be out to sell. The function of time setting increase the availability scope because the books are available as soon as possible. BookHub will benefit students because BookHub is a non-profit application. BookHub will have a donation column which allow people to donate books. The donation is available to students who have them in the wish list. As BookHub is exclusive to sfu, the BookHub is connect to sfu administration. Students do not have to wait and set up a meeting point after the trading information is posted. SFU students are able to give the book to SFU administration. Students have to show their id and the sold-out number which is provided by the website once the person pays for the book. If SFU permit the request, BookHub will connect to the SFU account and the balance in SFU account are able to directly deposited to the BookHub account. The functionalities mentioned above will be a competitive edge on the other sites.

Modified For Iteration 2:
User Stories:
There are two types of users in BookHub: admin and normal user
1.   Admin: Admin has a specific email and password. Admin will have special rights which help to maintain BookHub. The admin account is able to keep track all the users and books that are posted by users. Admin accounts are able to check the entire database. Admin accounts have the ability to delete the users. Admin is able to edit and delete the books that are posted on BookHub. In Future, admin will have rights to watch the transactions performed and receive the feedback directly from the users.
2.   Normal user: As a normal user, sign up to make an account on the website and then will use that username and password to log in to the website. User has option to manage their profile. Users can modify the details provided. Also, a user is able to add books and check books that are posted by other users. Users can modify and change the details of the books that is posted by he/she. But he/she do not have authorization to modify or delete the books posted by other users. Only the admin has the right to modify details for every book. In future, user will be able to add his/her profile picture and provide the availability if the book he/she wants to sell.

Workflow Steps:

In this Iteration, there is a new feature for adding the books to the book list. After logging in, the user will see a dropdown menu on the top right of the screen. The user can click on the menu and there will be an option "Add a new book". The user is able to click on the option and add a new book. The user is able to see all the books that are available using the "List Books" option. The user has full access to modify the details of the books that he/she has added. The user is restricted to modify or delete the books that he/she has added. The modification feature is achieved by providing the "edit book" or "delete book" buttons corresponding to the books that have been added by that specific user. The user is able to make changes in his/her profile by clicking on the "Profile" option on the menu. 

Modified for Iteration 3:
Retrospective:
There are four members in the team and the agile process is used for the second iteration. The team broke up works into small parts and different roles were given to team members. The work are divided into 10 tasks:
-	HTML Pages and Styling
-	Bcrypt Encryption
-	Create database and link it to users
-	Authentication
-	Visibility from UI
-	Search Bar
-	Profile Picture
-	Wishlist
-	Book's Image
-	Stripe API
Because some of these tasks were big, 2 members are collaborated to complete the task. The smaller tasks were completed individually. Nipun Jindal handled the Books Database and linked it with the Users. He implemented the search bar for iteration 3. Also, he helped in Authentication. Agamdeep Singh did the Bcrypt Encryptionand helped with the UI Authentication. Eric Zhuang helped with the Authentication and Styling. For iteration 3, Eric Zhaung and Agamdeep implemented the wishlist. Rajat Mangal managed the HTML pages, styling part, and UI visibility.for iteration 3, Rajat Mangal added Profile picture and Book's image. Rajat Mangal made a display for books with all details and its image.
For Iteration 3, the group wanted to implement a payment API, and the Stripe API is choosen to do. All the team members put in their efforts for BookHub. 

For iteration 2, the planning was done well in time and as a result, the whole work was completed before the expected time. Iteration 2 took group members 5 days to complete the goal. The constant support of all the team members helped to complete the stuff planned for Iteration 2. This time the collaboration was good as each team members learned from the mistakes from iteration 1. There were technical errors this time but the team was able to fix errors. This time the group tried to use GitHub more but the group is learning. The group divided the tasks on GitHub but the commits were made from the group leader account. Each group member did a good job in this Iteration. There is still space for improvements in utilizing the actual benefits of GitHub. Though the group was able to assign issues to GitHub, since the group was working together most of the time, the group committed only from one account. The committing style is the major thing that the group wants to improve from the next iteration onwards. Hence, the group will start doing commits from all the accounts from the next iteration. Overall, the work was split up between team members, every person was involved in all phases of design and implementation. It was a complete team effort and the team jelled up well.
"	For iteration 3, 
-	Things that went well: All the issues assigned to Team members were successfully completed and this time, Github was used to distribute work and everyone made full use of github's functionality. 
-	Things that didn't went well: Although we implemented Stripe API but we were not able to make complete use of its functionality and that we will try to improve.
-	For future: In future, we are planning to add more security to the site and we are also thinking to use more APIs. For instance, Facebook API. 


